{"openapi":"3.0.1","info":{"title":"LYNKS API","version":"v2.0"},"servers":[{"url":"https://{tenant}.lynks.lu","description":"Production server","variables":{"tenant":{"default":"your-tenant","description":"the name of your Lynks tenant"}}}],"paths":{"/v2/account-groups":{"get":{"operationId":"findAccountGroup","parameters":[{"description":"Group ID for filtering cash account groups. Multiple IDs are supported.","in":"query","name":"ids","required":false,"schema":{"type":"array","items":{"type":"integer","format":"int64"}}},{"description":"Group names for filtering cash account groups. Multiple group names are supported.","in":"query","name":"names","required":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Cash account ID for filtering cash account groups of which those accounts are part of. Multiple cash account IDs are supported.","in":"query","name":"cashAccountIds","required":false,"schema":{"type":"array","items":{"type":"integer","format":"int64"}}},{"description":"No pagination setup. If true, pageIndex and pageSize have no effect.","in":"query","name":"unpaged","required":false,"schema":{"type":"boolean","default":false}},{"description":"Zero-based page index (0..N)","in":"query","name":"pageIndex","required":false,"schema":{"type":"integer","default":0}},{"description":"The size of the page to be returned","in":"query","name":"pageSize","required":false,"schema":{"type":"integer","default":10}},{"description":"Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.","in":"query","name":"sort","required":false,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccountGroupResponse"}}}},"description":"Success - Account Group List Retrieved","headers":{"X-Total-Count":{"description":"Total number of records","schema":{"type":"integer"},"style":"simple"}}},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"}},"security":[{"oauth2":[]}],"summary":"Find account group","tags":["Account Groups"]},"post":{"operationId":"createAccountGroup","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountGroupBulkCreateRequest"}}},"required":true},"responses":{"201":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"integer","format":"int64"}}}},"description":"Success. The account groups are created and an array of account group IDs is returned in the same order."},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/ProblemDetailWithValidationErrors"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"}},"security":[{"oauth2":[]}],"summary":"Create account group","tags":["Account Groups"]}},"/v2/account-groups/{accountGroupId}/accounts/{accountId}":{"delete":{"operationId":"removeAccountFromAccountGroup","parameters":[{"description":"Account group ID","example":42,"in":"path","name":"accountGroupId","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"Cash account ID","example":1234,"in":"path","name":"accountId","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"Success - Account Removed From Account Group"},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not Found - The Requested Account Group, Account Or Both Do Not Exist"}},"security":[{"oauth2":[]}],"summary":"Remove account from an account group","tags":["Account Groups"]},"put":{"operationId":"addAccountToAccountGroup","parameters":[{"description":"Account group ID","example":42,"in":"path","name":"accountGroupId","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"Cash account ID","example":1234,"in":"path","name":"accountId","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"204":{"description":"Success - Account Added To Account Group"},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not Found - The Requested Account Group, Account Or Both Do Not Exist"}},"security":[{"oauth2":[]}],"summary":"Add account to an account group","tags":["Account Groups"]}},"/v2/account-groups/{id}":{"get":{"operationId":"getAccountGroup","parameters":[{"description":"The ID of the account group.","example":1234,"in":"path","name":"id","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountGroupResponse"}}},"description":"Success - Account Group Retrieved"},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not Found - The Requested Account Group Does Not Exist"}},"security":[{"oauth2":[]}],"summary":"Get account group","tags":["Account Groups"]},"patch":{"operationId":"updateAccountGroup","parameters":[{"description":"cash account id","example":1234,"in":"path","name":"id","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountGroupUpdateRequest"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccountGroupResponse"}}},"description":"Success - Account Group Updated"},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/ProblemDetailWithValidationErrors"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not Found - The Requested Account Group Does Not Exist"}},"security":[{"oauth2":[]}],"summary":"Update account group","tags":["Account Groups"]}},"/v2/account-groups/{id}/accounts":{"get":{"operationId":"findAccountsInAccountGroup","parameters":[{"description":"Account group ID","example":42,"in":"path","name":"id","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"No pagination setup. If true, pageIndex and pageSize have no effect.","in":"query","name":"unpaged","required":false,"schema":{"type":"boolean","default":false}},{"description":"Zero-based page index (0..N)","in":"query","name":"pageIndex","required":false,"schema":{"type":"integer","default":0}},{"description":"The size of the page to be returned","in":"query","name":"pageSize","required":false,"schema":{"type":"integer","default":10}},{"description":"Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.","in":"query","name":"sort","required":false,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CashAccountResponse"}}}},"description":"Success - Account List Retrieved","headers":{"X-Total-Count":{"description":"Total number of records","schema":{"type":"integer"},"style":"simple"}}},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not Found - The Account Group Does Not Exist"}},"security":[{"oauth2":[]}],"summary":"Find all accounts in account group","tags":["Account Groups"]}},"/v2/accounts":{"get":{"operationId":"findAccount","parameters":[{"description":"Account number for filtering cash accounts. Multiple account numbers are supported.","in":"query","name":"accountNumbers","required":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Account BIC for filtering cash accounts. Multiple BICs are supported.","in":"query","name":"bics","required":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Account status for filtering cash accounts. Multiple statuses are supported, and providing all possible statuses is equivalent to not using this filter at all.","in":"query","name":"statuses","required":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"ID of account group for filtering cash accounts. Multiple IDs are supported.","in":"query","name":"accountGroupIds","required":false,"schema":{"type":"array","items":{"type":"integer","format":"int64"}}},{"description":"No pagination setup. If true, pageIndex and pageSize have no effect.","in":"query","name":"unpaged","required":false,"schema":{"type":"boolean","default":false}},{"description":"Zero-based page index (0..N)","in":"query","name":"pageIndex","required":false,"schema":{"type":"integer","default":0}},{"description":"The size of the page to be returned","in":"query","name":"pageSize","required":false,"schema":{"type":"integer","default":10}},{"description":"Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.","in":"query","name":"sort","required":false,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CashAccountResponse"}}}},"description":"Success - Account List Retrieved","headers":{"X-Total-Count":{"description":"Total number of records","schema":{"type":"integer"},"style":"simple"}}},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"}},"security":[{"oauth2":[]}],"summary":"Find account","tags":["Accounts"]},"post":{"operationId":"createAccount","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CashAccountBulkCreateRequest"}}},"required":true},"responses":{"201":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"integer","format":"int64"}}}},"description":"Success - Account created"},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/ProblemDetailWithValidationErrors"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"}},"security":[{"oauth2":[]}],"summary":"Create account","tags":["Accounts"]}},"/v2/accounts/{id}":{"get":{"operationId":"getAccount","parameters":[{"description":"The ID of the cash account.","example":1234,"in":"path","name":"id","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CashAccountResponse"}}},"description":"Success - Account Retrieved"},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not Found - The Requested Account Does Not Exist"}},"security":[{"oauth2":[]}],"summary":"Get account","tags":["Accounts"]},"patch":{"operationId":"updateAccount","parameters":[{"description":"cash account id","example":1234,"in":"path","name":"id","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CashAccountUpdateRequest"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CashAccountResponse"}}},"description":"Success - Account Updated"},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/ProblemDetailWithValidationErrors"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not Found - The Requested Account Does Not Exist"}},"security":[{"oauth2":[]}],"summary":"Update account","tags":["Accounts"]}},"/v2/accounts/{id}/account-groups":{"get":{"operationId":"findAccountGroupsTheAccountIsPartOf","parameters":[{"description":"Cash account ID","example":1234,"in":"path","name":"id","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"No pagination setup. If true, pageIndex and pageSize have no effect.","in":"query","name":"unpaged","required":false,"schema":{"type":"boolean","default":false}},{"description":"Zero-based page index (0..N)","in":"query","name":"pageIndex","required":false,"schema":{"type":"integer","default":0}},{"description":"The size of the page to be returned","in":"query","name":"pageSize","required":false,"schema":{"type":"integer","default":10}},{"description":"Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.","in":"query","name":"sort","required":false,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/AccountGroupResponse"}}}},"description":"Success - Account Group List Retrieved","headers":{"X-Total-Count":{"description":"Total number of records","schema":{"type":"integer"},"style":"simple"}}},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not Found - The Account Does Not Exist"}},"security":[{"oauth2":[]}],"summary":"Find all account groups the account is part of","tags":["Accounts"]}},"/v2/accounts/{id}/statements":{"get":{"operationId":"findAccountStatementsPerAccount","parameters":[{"description":"The ID of the cash account","example":1234,"in":"path","name":"id","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"Start date in ISO extended format yyyy-MM-dd for filtering statements with closing balance date on or after this date (inclusive).","example":"1969-07-20","in":"query","name":"closingBalanceDateRange.from","schema":{"type":"string"}},{"description":"End date in ISO extended format yyyy-MM-dd for filtering statements with closing balance date on or before this date (inclusive).","example":"1969-07-21","in":"query","name":"closingBalanceDateRange.to","schema":{"type":"string"}},{"description":"No pagination setup. If true, pageIndex and pageSize have no effect.","in":"query","name":"unpaged","required":false,"schema":{"type":"boolean","default":false}},{"description":"Zero-based page index (0..N)","in":"query","name":"pageIndex","required":false,"schema":{"type":"integer","default":0}},{"description":"The size of the page to be returned","in":"query","name":"pageSize","required":false,"schema":{"type":"integer","default":10}},{"description":"Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.","in":"query","name":"sort","required":false,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CashAccountStatementResponse"}}}},"description":"Success - Account Statements List Retrieved","headers":{"X-Total-Count":{"description":"Total number of records","schema":{"type":"integer"},"style":"simple"}}},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not Found - The Requested Account Does Not Exist"}},"security":[{"oauth2":[]}],"summary":"Find account statement","tags":["Accounts"]}},"/v2/counterparties":{"get":{"operationId":"findCounterparty","parameters":[{"description":"Account number for filtering counterparty accounts. Multiple account numbers are supported.","in":"query","name":"accountNumbers","required":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Account BIC for filtering counterparty accounts. Multiple BICs are supported.","in":"query","name":"bics","required":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Account name for filtering counterparty accounts. Multiple account names are supported.","in":"query","name":"accountNames","required":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Account status for filtering counterparty accounts. Multiple statuses are supported, and providing all possible statuses is equivalent to not using this filter at all.","in":"query","name":"statuses","required":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"External ID for filtering counterparty accounts. Multiple IDs are supported.","in":"query","name":"externalIds","required":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"No pagination setup. If true, pageIndex and pageSize have no effect.","in":"query","name":"unpaged","required":false,"schema":{"type":"boolean","default":false}},{"description":"Zero-based page index (0..N)","in":"query","name":"pageIndex","required":false,"schema":{"type":"integer","default":0}},{"description":"The size of the page to be returned","in":"query","name":"pageSize","required":false,"schema":{"type":"integer","default":10}},{"description":"Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.","in":"query","name":"sort","required":false,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CounterpartyResponse"}}}},"description":"Provided JSON is valid, an array of matching counterparties is returned","headers":{"X-Total-Count":{"description":"Total number of records","schema":{"type":"integer"},"style":"simple"}}},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request: query params are invalid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"}},"security":[{"oauth2":[]}],"summary":"Find counterparty","tags":["Counterparty Accounts"]},"post":{"operationId":"createCounterparty","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CounterpartyBulkCreateRequest"}}},"required":true},"responses":{"201":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"integer","format":"int64"}}}},"description":"Success. The counterparty accounts are created and an array of counterparty IDs is returned in the same order.","headers":{"Location":{"description":"URI of the created account","schema":{"type":"string"},"style":"simple"}}},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/ProblemDetailWithValidationErrors"}}},"description":"Bad request. The file has validation errors. The validationErrors array contains error messages for each invalid counterparty."},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"}},"security":[{"oauth2":[]}],"summary":"Create counterparty account","tags":["Counterparty Accounts"]}},"/v2/counterparties/file":{"post":{"operationId":"uploadCounterparty","requestBody":{"content":{"multipart/form-data":{"schema":{"type":"object","properties":{"file":{"type":"string","format":"binary","description":"Excel or CSV file with counterparties"}},"required":["file"]}}},"required":true},"responses":{"201":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"integer","format":"int64"}}}},"description":"Success. The counterparty accounts are created and an array of counterparty IDs is returned in the same order."},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/ProblemDetailWithValidationErrors"}}},"description":"Bad request. The file has validation errors. The validationErrors array contains error messages for each invalid counterparty."},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"}},"security":[{"oauth2":[]}],"summary":"Upload counterparty","tags":["Counterparty Accounts"]}},"/v2/counterparties/{id}":{"get":{"operationId":"getCounterparty","parameters":[{"description":"Counterparty account identifier","example":1234,"in":"path","name":"id","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CounterpartyResponse"}}},"description":"Success. The counterparty account is returned."},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad request."},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not Found. The requested counterparty account does not exist."}},"security":[{"oauth2":[]}],"summary":"Get counterparty account","tags":["Counterparty Accounts"]},"patch":{"operationId":"updateCounterparty","parameters":[{"description":"Counterparty account identifier","example":1234,"in":"path","name":"id","required":true,"schema":{"type":"integer","format":"int64"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CounterpartyUpdateRequest"}}},"required":true},"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CounterpartyResponse"}}},"description":"Success. The counterparty account has been updated."},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/ProblemDetailWithValidationErrors"}}},"description":"Bad request. File has validation errors. validationErrors array will contain error messages for each invalid counterparty."},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"}},"security":[{"oauth2":[]}],"summary":"Update counterparty account","tags":["Counterparty Accounts"]}},"/v2/credit-transfers":{"get":{"operationId":"findCreditTransfer","parameters":[{"description":"Credit transfer alphanumeric references. Multiple references are supported.","in":"query","name":"references","required":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"Start date in ISO extended format yyyy-MM-dd for filtering transactions created on or after this date (inclusive).","example":"1969-07-20","in":"query","name":"creationDate.from","required":false,"schema":{"type":"string","format":"date"}},{"description":"End date in ISO extended format yyyy-MM-dd for filtering transactions created on or before this date (inclusive).","example":"1969-07-21","in":"query","name":"creationDate.to","required":false,"schema":{"type":"string","format":"date"}},{"description":"Start date in ISO extended format yyyy-MM-dd for filtering transactions with execution on or after this date (inclusive).","example":"1969-07-20","in":"query","name":"executionDate.from","required":false,"schema":{"type":"string","format":"date"}},{"description":"End date in ISO extended format yyyy-MM-dd for filtering transactions with execution on or before this date (inclusive).","example":"1969-07-21","in":"query","name":"executionDate.to","required":false,"schema":{"type":"string","format":"date"}},{"description":"No pagination setup. If true, pageIndex and pageSize have no effect.","in":"query","name":"unpaged","required":false,"schema":{"type":"boolean","default":false}},{"description":"Zero-based page index (0..N)","in":"query","name":"pageIndex","required":false,"schema":{"type":"integer","default":0}},{"description":"The size of the page to be returned","in":"query","name":"pageSize","required":false,"schema":{"type":"integer","default":10}},{"description":"Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.","in":"query","name":"sort","required":false,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CreditTransferResponse"}}}},"description":"Success. Returns a list of credit transfers.","headers":{"X-Total-Count":{"description":"Total number of records","schema":{"type":"integer"},"style":"simple"}}},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"}},"security":[{"oauth2":[]}],"summary":"Find credit transfer","tags":["Credit Transfers"]},"post":{"operationId":"createCreditTransfer","parameters":[{"in":"header","name":"X-Signature","required":false,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateCreditTransfersRequest"}}},"description":"JSON containing a list of credit transfers information and optionally batching details","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"integer","format":"int64"}}}},"description":"Success. Credit transfers are created and credit transfer IDs are returned in an array.","headers":{"Location":{"description":"URI of the created credit transfer","schema":{"type":"string"},"style":"simple"}}},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/ProblemDetailWithValidationErrors"}}},"description":"Bad request. Returns an array of error messages for each invalid credit transfer."},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"}},"security":[{"oauth2":[]}],"summary":"Create credit transfers","tags":["Credit Transfers"]}},"/v2/credit-transfers/{id}":{"get":{"operationId":"getCreditTransfer","parameters":[{"description":"credit transfer identifier","example":1234,"in":"path","name":"id","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreditTransferResponse"}}},"description":"Success. Returns the credit transfer with the provided ID."},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not found. The credit transfer with the provided ID does not exist."}},"security":[{"oauth2":[]}],"summary":"Get credit transfer","tags":["Credit Transfers"]}},"/v2/direct-debits":{"post":{"operationId":"createDirectDebitBatch","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DirectDebitBulkCreateRequest"}}},"required":true},"responses":{"201":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/DirectDebitBulkCreateResponse"}}}},"description":"Success. Direct debit batches are created and direct debit batch IDs are returned in an array."},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/ProblemDetailWithValidationErrors"}}},"description":"Bad request. Returns an array of error messages for each invalid direct debit batch."},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"}},"security":[{"oauth2":[]}],"summary":"Create direct debit batches","tags":["Direct Debits"]}},"/v2/direct-debits/{batchId}":{"get":{"operationId":"getDirectDebitBatch","parameters":[{"description":"direct debit batch identifier","example":1234,"in":"path","name":"batchId","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DirectDebitBatchResponse"}}},"description":"Success. Returns the direct debit batch with the provided ID."},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not found. The direct debit batch with the provided ID does not exist."}},"security":[{"oauth2":[]}],"summary":"Get direct debit batch","tags":["Direct Debits"]}},"/v2/direct-debits/{batchId}/transactions/{id}":{"get":{"operationId":"getDirectDebitRequest","parameters":[{"description":"direct debit batch identifier","example":1234,"in":"path","name":"batchId","required":true,"schema":{"type":"integer","format":"int64"}},{"description":"direct debit request identifier","example":1234,"in":"path","name":"id","required":true,"schema":{"type":"integer","format":"int64"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DirectDebitResponse"}}},"description":"Success. Returns the direct debit request with the provided ID."},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not found. The direct debit request with the provided ID does not exist."}},"security":[{"oauth2":[]}],"summary":"Get direct debit request","tags":["Direct Debits"]}},"/v2/payment-categories":{"get":{"operationId":"findPaymentCategory","parameters":[{"description":"ID for filtering payment categories. Multiple IDs are supported.","in":"query","name":"ids","required":false,"schema":{"type":"array","items":{"type":"integer","format":"int64"}}},{"description":"Status for filtering payment categories. Multiple statuses are supported, and providing all possible statuses is equivalent to not using this filter at all.","in":"query","name":"statuses","required":false,"schema":{"type":"array","items":{"type":"string"}}},{"description":"No pagination setup. If true, pageIndex and pageSize have no effect.","in":"query","name":"unpaged","required":false,"schema":{"type":"boolean","default":false}},{"description":"Zero-based page index (0..N)","in":"query","name":"pageIndex","required":false,"schema":{"type":"integer","default":0}},{"description":"The size of the page to be returned","in":"query","name":"pageSize","required":false,"schema":{"type":"integer","default":10}},{"description":"Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.","in":"query","name":"sort","required":false,"schema":{"type":"array","items":{"type":"string"}}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/PaymentCategoryResponse"}}}},"description":"Success - Payment Category List Retrieved","headers":{"X-Total-Count":{"description":"Total number of records","schema":{"type":"integer"},"style":"simple"}}},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"}},"security":[{"oauth2":[]}],"summary":"Find payment category","tags":["Payment Categories"]}},"/v2/statements":{"get":{"operationId":"findAccountStatements","parameters":[{"description":"Cash account number for filtering statements. Multiple account numbers are supported.","in":"query","name":"accountNumbers","schema":{"type":"array","items":{"type":"string"}}},{"description":"Cash account BIC for filtering statements. Multiple BICs are supported.","in":"query","name":"bics","schema":{"type":"array","items":{"type":"string"}}},{"description":"Statement numbers for filtering statements. Multiple statement numbers are supported.","in":"query","name":"statementNumbers","schema":{"type":"array","items":{"type":"string"}}},{"description":"Start date in ISO extended format yyyy-MM-dd for filtering statements with closing balance date on or after this date (inclusive).","example":"1969-07-20","in":"query","name":"closingBalanceDateRange.from","schema":{"type":"string"}},{"description":"End date in ISO extended format yyyy-MM-dd for filtering statements with closing balance date on or before this date (inclusive).","example":"1969-07-21","in":"query","name":"closingBalanceDateRange.to","schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/CashAccountStatementResponse"}}}},"description":"Success - Account Statements List Retrieved","headers":{"X-Total-Count":{"description":"Total number of records","schema":{"type":"integer"},"style":"simple"}}},"400":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Bad Request - Request Is Not Valid"},"401":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Unauthorized - Authorization Information Is Missing Or Invalid"},"403":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Forbidden - The User Has No Permissions For This Operation"},"404":{"content":{"application/problem+json":{"schema":{"$ref":"#/components/schemas/Problem"}}},"description":"Not Found - The Requested Statements Do Not Exist"}},"security":[{"oauth2":[]}],"summary":"Find account statements","tags":["Account statements"]}}},"components":{"schemas":{"AccountGroupBulkCreateRequest":{"required":["accountGroups"],"type":"object","properties":{"accountGroups":{"minLength":1,"type":"array","description":"List of account groups to create","items":{"$ref":"#/components/schemas/AccountGroupCreateRequest"}}},"description":"Create account group request"},"AccountGroupCreateRequest":{"required":["description","name"],"type":"object","properties":{"description":{"maxLength":255,"minLength":0,"type":"string","description":"Description of the account group"},"name":{"maxLength":255,"minLength":0,"type":"string","description":"Name of the account group"}},"description":"Create account group request"},"AccountGroupResponse":{"type":"object","properties":{"description":{"type":"string","description":"Description of the account group"},"id":{"type":"integer","description":"The account group identifier","format":"int64","readOnly":true},"name":{"type":"string","description":"Name of the account group"}},"description":"Account group response"},"AccountGroupUpdateRequest":{"type":"object","properties":{"description":{"maxLength":255,"minLength":0,"type":"string","description":"Description of the account group"},"name":{"maxLength":255,"minLength":0,"type":"string","description":"Name of the account group"}},"description":"Update account group request"},"Address":{"required":["address","city","country","zip"],"type":"object","properties":{"address":{"maxLength":80,"minLength":1,"type":"string","description":"Address line","example":"17, rue du Marché-aux-Herbes"},"city":{"maxLength":80,"minLength":1,"type":"string","description":"City","example":"Luxembourg"},"country":{"maxLength":80,"minLength":1,"type":"string","description":"Country official English name, 2 letter or 3 letter ISO 3166-1 code.","example":"Luxembourg"},"zip":{"maxLength":80,"minLength":1,"type":"string","description":"ZIP code","example":"1728"}},"description":"The address details. The total length of address + zip + city cannot exceed 103 characters."},"BatchBookingParams":{"required":["name","reference"],"type":"object","properties":{"name":{"type":"string","description":"Name of batch booking"},"reference":{"type":"string","description":"Batch booking reference"}},"description":"Batch booking parameters"},"BatchingParams":{"type":"object","properties":{"batchBookingParams":{"$ref":"#/components/schemas/BatchBookingParams"}},"description":"Parameters to group credit transfers into batches"},"CashAccountBulkCreateRequest":{"required":["accounts"],"type":"object","properties":{"accounts":{"minLength":1,"type":"array","description":"List of cash accounts to create","items":{"$ref":"#/components/schemas/CashAccountCreateRequest"}}},"description":"Create account request"},"CashAccountCreateRequest":{"required":["accountNumber","address","alias","bic","currency","name"],"type":"object","properties":{"accountNumber":{"maxLength":34,"minLength":5,"type":"string","description":"The cash account number, can be an IBAN or a BBAN (unstructured account number).","example":"DE75512108001245126199"},"address":{"$ref":"#/components/schemas/Address"},"alias":{"maxLength":70,"minLength":0,"type":"string","description":"More familiar or preferential name for which the cash account is also known as."},"bic":{"type":"string","description":"BIC of the cash account.","example":"DEUTDEFFXXX"},"currency":{"pattern":"^[a-zA-Z]{3}$","type":"string","description":"ISO three letter currency code.","example":"EUR"},"groups":{"uniqueItems":true,"type":"array","description":"Set of ID's of groups the cash account should belong to.","example":[15,16],"items":{"type":"integer","description":"Set of ID's of groups the cash account should belong to.","format":"int64"}},"hasBankFeedback":{"type":"boolean","description":"Identify whether the bank sends feedback for this account or not. If set to false then transactions from this account will be marked as processed as soon as we received an ACK","default":true},"name":{"maxLength":35,"minLength":0,"type":"string","description":"The cash account name."}},"description":"Create account request"},"CashAccountResponse":{"required":["address"],"type":"object","properties":{"accountNumber":{"type":"string","description":"Account number"},"address":{"$ref":"#/components/schemas/Address"},"alias":{"type":"string","description":"Account alias"},"bic":{"type":"string","description":"BIC code"},"country":{"type":"string","description":"Account country"},"createdBy":{"type":"string","description":"created by"},"createdOn":{"type":"string","description":"created on"},"currency":{"type":"string","description":"Account currency"},"id":{"type":"integer","description":"Account identifier","format":"int64","readOnly":true},"name":{"type":"string","description":"Account holder name"},"status":{"type":"string","description":"Status of the cash account","enum":["ACTIVE","DEACTIVATED"]}},"description":"Get cash account response"},"CashAccountStatementResponse":{"type":"object","properties":{"account":{"$ref":"#/components/schemas/StatementAccount"},"closingBalance":{"$ref":"#/components/schemas/StatementBalance"},"createdDateTime":{"type":"string","description":"Statement creation date time","format":"date-time"},"openingBalance":{"$ref":"#/components/schemas/StatementBalance"},"statementNumber":{"type":"string","description":"Statement number"},"transactionEntries":{"type":"array","description":"Statement transactions list","items":{"$ref":"#/components/schemas/StatementTransactionEntry"}},"transactionSummary":{"$ref":"#/components/schemas/StatementTransactionSummary"}},"description":"Get cash account statement response"},"CashAccountUpdateRequest":{"type":"object","properties":{"address":{"$ref":"#/components/schemas/OptionalAddress"},"alias":{"maxLength":70,"minLength":0,"type":"string","description":"More familiar or preferential name for which the cash account is also known as."},"bic":{"type":"string","description":"BIC of the cash account.","example":"DEUTDEFFXXX"},"currency":{"pattern":"^[a-zA-Z]{3}$","type":"string","description":"ISO three letter currency code.","example":"EUR"},"hasBankFeedback":{"type":"boolean","description":"Identify whether the bank sends feedback for this account or not.","default":true},"name":{"maxLength":35,"minLength":0,"type":"string","description":"The cash account name."}},"description":"Update account request"},"CorrespondentBank":{"required":["bic"],"type":"object","properties":{"bic":{"type":"string","description":"bic of the correspondent bank"}},"description":"Correspondent Bank"},"Counterparty":{"type":"object","properties":{"accountNumber":{"type":"string","description":"Account number for counterparty. Ignored if an ID is provided."},"id":{"type":"integer","description":"Counterparty ID.","format":"int64"}},"description":"Counterparty account info. Only one of ID or accountNumber is required."},"CounterpartyBulkCreateRequest":{"required":["counterparties"],"type":"object","properties":{"counterparties":{"minLength":1,"type":"array","description":"List of counterparties to create","items":{"$ref":"#/components/schemas/CounterpartyCreateRequest"}}},"description":"JSON containing a list of counterparties to be created"},"CounterpartyCreateRequest":{"minLength":1,"required":["accountNumber","address","bic","type"],"type":"object","properties":{"accountNumber":{"maxLength":34,"minLength":5,"type":"string","description":"The counterparty account number, can be an IBAN or a BBAN (unstructured account number)."},"address":{"$ref":"#/components/schemas/Address"},"aliasName":{"maxLength":70,"minLength":0,"type":"string","description":"The alias name for the new account."},"bic":{"type":"string","description":"BIC of the counterparty account.","example":"DEUTDEFFXXX"},"dateOfBirth":{"type":"string","description":"The date of birth of the individual.","format":"date"},"externalId":{"type":"string","description":"The external ID for this counterparty. Can be used to match against an external system."},"firstName":{"maxLength":35,"minLength":1,"type":"string","description":"The first name of the individual. This field is mandatory if type is INDIVIDUAL."},"gender":{"type":"string","description":"The gender of the individual.","enum":["MALE","FEMALE","UNSPECIFIED"]},"lastName":{"maxLength":35,"minLength":1,"type":"string","description":"The last name of the individual. This field is mandatory if type is INDIVIDUAL."},"orgName":{"maxLength":35,"minLength":0,"type":"string","description":"The organisation name."},"riskLevelName":{"type":"string","description":"The name of the associated risk level."},"type":{"type":"string","description":"The type of the new counterparty account.","enum":["ORGANISATION","INDIVIDUAL"]}},"description":"Create counterparty request"},"CounterpartyResponse":{"required":["accountNumber","address","bic","type"],"type":"object","properties":{"accountCountry":{"maxLength":2,"minLength":2,"type":"string","description":"account country"},"accountName":{"type":"string","description":"Organization's name or individual's full name."},"accountNumber":{"maxLength":34,"minLength":5,"type":"string","description":"The counterparty account number, can be an IBAN or a BBAN (unstructured account number)."},"address":{"$ref":"#/components/schemas/Address"},"aliasName":{"maxLength":70,"minLength":0,"type":"string","description":"The alias name for the new account."},"approvedBy":{"type":"string","description":"approved by"},"approvedOn":{"type":"string","description":"approved on"},"bic":{"maxLength":11,"minLength":8,"type":"string","description":"BIC of the counterparty account."},"blacklisted":{"type":"boolean","description":"is blacklisted account"},"createdBy":{"type":"string","description":"created by"},"createdOn":{"type":"string","description":"created on"},"deactivatedOn":{"type":"string","description":"deactivated on"},"externalId":{"type":"string","description":"The external ID for this counterparty. Can be used to match against an external system."},"id":{"type":"integer","description":"The counterparty identifier.","format":"int64","readOnly":true},"rejectedBy":{"type":"string","description":"rejected by"},"rejectedOn":{"type":"string","description":"rejected on"},"rejectionReason":{"type":"string","description":"rejection reason"},"riskLevelLog":{"$ref":"#/components/schemas/CounterpartyRiskLogDto"},"status":{"type":"string","description":"The status of the counterparty.","enum":["PENDING","APPROVED","REJECTED","DEACTIVATED"]},"type":{"type":"string","description":"The type of the new counterparty account.","enum":["ORGANISATION","INDIVIDUAL"]}},"description":"Get counterparty account response","discriminator":{"propertyName":"type"}},"CounterpartyRiskLogDto":{"type":"object","properties":{"comment":{"maxLength":255,"minLength":0,"type":"string"},"createdBy":{"maxLength":255,"minLength":0,"type":"string"},"createdOn":{"type":"string","format":"date-time"},"links":{"uniqueItems":true,"type":"array","items":{"type":"string"}},"riskLevel":{"$ref":"#/components/schemas/RiskLevelDto"}},"description":"Counterparty risk level details."},"CounterpartyUpdateRequest":{"required":["bic"],"type":"object","properties":{"address":{"$ref":"#/components/schemas/OptionalAddress"},"aliasName":{"maxLength":70,"minLength":0,"type":"string","description":"The new alias name for the account."},"bic":{"type":"string","description":"BIC of the counterparty account.","example":"DEUTDEFFXXX"},"dateOfBirth":{"type":"string","description":"individual date of birth","format":"date"},"externalId":{"type":"string","description":"counterparty external id"},"firstName":{"maxLength":35,"minLength":1,"type":"string","description":"The first name of the individual. This field is only considered if type is INDIVIDUAL."},"gender":{"type":"string","description":"individual gender","enum":["MALE","FEMALE","UNSPECIFIED"]},"id":{"type":"integer","description":"counterparty identifier","format":"int64"},"lastName":{"maxLength":35,"minLength":1,"type":"string","description":"The last name of the individual. This field is only considered if type is INDIVIDUAL."},"orgName":{"maxLength":35,"minLength":0,"type":"string","description":"The organisation name."},"riskLevelName":{"type":"string","description":"risk level name"},"type":{"type":"string","description":"type of the new account","enum":["ORGANISATION","INDIVIDUAL"]}},"description":"Counterparty payload"},"CreateCreditTransfersRequest":{"required":["creditTransfers"],"type":"object","properties":{"creditTransfers":{"type":"array","description":"List of credit transfers create request","items":{"$ref":"#/components/schemas/CreditTransferCreateRequest"}},"options":{"$ref":"#/components/schemas/CreditTransferCreateRequestOptions"}}},"CreditTransferAccount":{"type":"object","properties":{"accountNumber":{"type":"string","description":"account number"},"alias":{"type":"string","description":"alias"},"bicCode":{"type":"string","description":"BIC code"},"id":{"type":"integer","description":"identifier","format":"int64"},"name":{"type":"string","description":"holder name"}},"description":"account data of credit transfer"},"CreditTransferCreateRequest":{"required":["amount","category","chargeBearer","counterparty","currency","orderingParty","remittanceInfo"],"type":"object","properties":{"amount":{"minimum":0,"exclusiveMinimum":true,"type":"number","description":"amount"},"authorisationDate":{"type":"string","description":"Authorisation deadline date in ISO extended format yyyy-MM-dd","format":"date","example":"1969-07-20"},"category":{"type":"string","description":"category"},"chargeBearer":{"type":"string","description":"charge bearer code","enum":["CRED","DEBT","SHAR","SLEV"]},"correspondentBank":{"$ref":"#/components/schemas/CorrespondentBank"},"counterparty":{"$ref":"#/components/schemas/Counterparty"},"currency":{"pattern":"^[a-zA-Z]{3}$","type":"string","description":"currency"},"executionDate":{"type":"string","description":"Requested execution date in ISO extended format yyyy-MM-dd","format":"date","example":"1969-07-20"},"groupId":{"type":"integer","description":"transaction group id","format":"int64"},"orderingParty":{"$ref":"#/components/schemas/OrderingParty"},"reference":{"maxLength":35,"minLength":0,"type":"string","description":"Alphanumeric reference that uniquely identifies a credit transfer. If a reference is not provided the system will automatically generate one"},"remittanceInfo":{"maxLength":140,"minLength":0,"pattern":"^[a-zA-Z0-9\\s!@#$%^&*()-_=+;:'\",.<>?/]*$","type":"string","description":"Remittance information"},"urgency":{"type":"string","description":"urgency","enum":["URGENT","NORMAL"]}},"description":"Credit transfer create request for V2"},"CreditTransferCreateRequestOptions":{"type":"object","properties":{"batchingParams":{"$ref":"#/components/schemas/BatchingParams"},"draft":{"type":"boolean","description":"Transactions created as draft do not have any automatic treatment. They have to be explicitly sent for authorization after creation."}},"description":"Options to apply to all submitted credit transfers"},"CreditTransferResponse":{"type":"object","properties":{"amount":{"type":"number","description":"amount"},"category":{"type":"string","description":"category"},"chargeBearer":{"type":"string","description":"charge bearer code","enum":["CRED","DEBT","SHAR","SLEV"]},"correspondentBank":{"$ref":"#/components/schemas/CorrespondentBank"},"counterparty":{"$ref":"#/components/schemas/CreditTransferAccount"},"createdOn":{"type":"string","description":"transaction creation date","format":"date-time"},"currency":{"type":"string","description":"currency"},"executionDate":{"type":"string","description":"requested execution date","format":"date"},"id":{"type":"integer","description":"identifier","format":"int64"},"orderingParty":{"$ref":"#/components/schemas/CreditTransferAccount"},"reference":{"type":"string","description":"alphanumeric reference"},"remittanceInfo":{"type":"string","description":"remittance info"},"signatureDate":{"type":"string","description":"requested signature date","format":"date-time"},"signatureSummary":{"$ref":"#/components/schemas/SignatureSummary"},"status":{"type":"string","description":"current status","enum":["DRAFT","WAITING_FOR_SIGNATURES","PENDING_DELIVERY_TO_BANK","WAITING_MANUAL_TRANSFER_TO_BANK","PENDING_EXECUTION_BY_BANK","NOT_EXECUTED_BY_BANK","FAILED","REJECTED_BY_SIGNATORY","CANCELLED","EXECUTED"]},"urgency":{"type":"string","description":"urgency","enum":["URGENT","NORMAL"]},"valueDate":{"type":"string","description":"value date","format":"date"}},"description":"Credit transfer details data."},"DirectDebitAccount":{"type":"object","properties":{"accountNumber":{"type":"string","description":"Account number"},"alias":{"type":"string","description":"Alias"},"bicCode":{"type":"string","description":"BIC code"},"id":{"type":"integer","description":"Internal identifier of the account","format":"int64"},"name":{"type":"string","description":"Holder name"}},"description":"Debtor account details"},"DirectDebitBatchResponse":{"type":"object","properties":{"collectedAmount":{"type":"number","description":"Direct debit batch collected amount"},"id":{"type":"integer","description":"Internal identifier","format":"int64"},"name":{"type":"string","description":"Direct debit batch name"},"reference":{"type":"string","description":"Unique reference for the direct debit batch"},"status":{"type":"string","description":"Direct debit batch status","enum":["AUTHORISED","CANCELLED","EXECUTED","DELIVERED","FAILED","REJECTED_BY_BANK","REJECTED_BY_USER","WAITING_FOR_AUTHORISATION","WAITING_FOR_TRANSFER"]},"summaryByStatus":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/DirectDebitSummaryResponse"},"description":"Direct debit requests summary (count and amount) grouped by their status"},"totalAmount":{"type":"number","description":"Direct debit batch total amount"},"totalCount":{"type":"integer","description":"Number of direct debit requests contained within this direct debit batch","format":"int32"}},"description":"Direct debit batch details"},"DirectDebitBulkCreateRequest":{"required":["directDebitBatches"],"type":"object","properties":{"directDebitBatches":{"type":"array","description":"List of direct debit batches to create","items":{"$ref":"#/components/schemas/DirectDebitCreateRequest"}}},"description":"JSON containing a list of direct debit batches information"},"DirectDebitBulkCreateResponse":{"type":"object","properties":{"directDebitBatches":{"type":"array","items":{"$ref":"#/components/schemas/DirectDebitCreateResponse"}}},"description":"Direct debit batch bulk create response containing the IDs of the created resources"},"DirectDebitCreateRequest":{"required":["creditor","creditorSchemeId","directDebits"],"type":"object","properties":{"creditor":{"$ref":"#/components/schemas/creditor"},"creditorSchemeId":{"maxLength":35,"minLength":0,"type":"string","description":"Identification of the creditor scheme","example":"BE12ZZZ0123456789"},"directDebits":{"minLength":1,"type":"array","items":{"$ref":"#/components/schemas/DirectDebitTransactionRequest"}},"metadata":{"$ref":"#/components/schemas/DirectDebitCreationMetadata"}},"description":"List of direct debit batches to create"},"DirectDebitCreateResponse":{"type":"object","properties":{"batchId":{"type":"integer","description":"ID of the created direct debit batch","format":"int64"},"directDebitIds":{"type":"array","description":"List of the IDs of the created direct debit requests","items":{"type":"integer","description":"List of the IDs of the created direct debit requests","format":"int64"}}},"description":"Direct debit batch create response"},"DirectDebitCreationMetadata":{"type":"object","properties":{"autoTransfer":{"type":"boolean","description":"If set to true, direct debit batch initiation requests will be sent to the bank automatically when authorised. That is the default behavior if no value is provided"},"batchName":{"maxLength":255,"minLength":0,"type":"string","description":"Unique name for the direct debit batch. If not provided, one will be generated automatically"}},"description":"Collection level metadata information applicable to all individual transactions contained within the request"},"DirectDebitResponse":{"type":"object","properties":{"amount":{"type":"number","description":"Amount"},"batchId":{"type":"integer","description":"Direct debit batch identifier","format":"int64"},"creditor":{"$ref":"#/components/schemas/DirectDebitAccount"},"currency":{"type":"string","description":"Currency"},"debtor":{"$ref":"#/components/schemas/DirectDebitAccount"},"endToEndId":{"type":"string","description":"End to end identifier"},"id":{"type":"integer","description":"Direct debit request identifier","format":"int64"},"mandateDateOfSignature":{"type":"string","description":"Mandate date of signature","format":"date"},"mandateId":{"type":"string","description":"Mandate identifier"},"remittanceInformation":{"type":"string","description":"Remittance information"},"requestedCollectionDate":{"type":"string","description":"Requested collection date","format":"date"},"schemeId":{"type":"string","description":"Scheme identifier"},"status":{"type":"string","description":"Status","enum":["CANCELLED","CREATED","EXECUTED","FAILED","DELIVERED","PENDING_EXECUTION","REJECTED_BY_BANK","REJECTED_BY_USER"]},"statusMessage":{"type":"string","description":"Status detail description"}}},"DirectDebitSummaryResponse":{"type":"object","properties":{"amount":{"type":"number"},"count":{"type":"integer","format":"int64"}},"description":"Direct debit requests summary (count and amount) grouped by their status"},"DirectDebitTransactionRequest":{"minLength":1,"required":["amount","currency","debtor","mandateDateOfSignature","mandateId","remittanceInformation"],"type":"object","properties":{"amount":{"minimum":0,"exclusiveMinimum":true,"type":"number","description":"Amount of the direct debit request"},"currency":{"pattern":"^[a-zA-Z]{3}$","type":"string","description":"Currency of the direct debit request. Only EUR is currently supported"},"debtor":{"$ref":"#/components/schemas/debtor"},"endToEndId":{"maxLength":35,"minLength":0,"type":"string","description":"Optional, if end to end ID is not provided, a unique one will be generated"},"mandateDateOfSignature":{"type":"string","description":"Mandate date of signature in ISO extended format yyyy-MM-dd","format":"date","example":"1969-07-20"},"mandateId":{"maxLength":35,"minLength":0,"type":"string","description":"Mandate ID"},"remittanceInformation":{"maxLength":140,"minLength":0,"pattern":"^[a-zA-Z0-9\\s!@#$%^&*()-_=+;:'\",.<>?/]*$","type":"string","description":"Remittance information"},"requestedCollectionDate":{"type":"string","description":"Requested collection date in ISO extended format yyyy-MM-dd","format":"date","example":"1969-07-20"}},"description":"Set of characteristics that apply to the credit side of the direct debit transaction initiation"},"OptionalAddress":{"properties":{"address":{"maxLength":80,"minLength":1,"type":"string","description":"Address line","example":"17, rue du Marché-aux-Herbes"},"city":{"maxLength":80,"minLength":1,"type":"string","description":"City","example":"Luxembourg"},"country":{"maxLength":80,"minLength":1,"type":"string","description":"Country official English name, 2 letter or 3 letter ISO 3166-1 code.","example":"Luxembourg"},"zip":{"maxLength":80,"minLength":1,"type":"string","description":"ZIP code","example":"1728"}},"description":"The address details. The total length of address + zip + city cannot exceed 103 characters."},"OrderingParty":{"type":"object","properties":{"accountNumber":{"type":"string","description":"Account number for ordering party. Ignored if an ID is provided."},"id":{"type":"integer","description":"Ordering party ID.","format":"int64"}},"description":"Ordering party account info. Only one of ID or accountNumber is required."},"PaymentCategoryResponse":{"type":"object","properties":{"description":{"type":"string","description":"Payment category description"},"id":{"type":"integer","description":"Payment category identifier","format":"int64","readOnly":true},"name":{"type":"string","description":"Payment category name"},"status":{"type":"string","description":"Payment category status","enum":["ACTIVE","DEACTIVATED"]}},"description":"Get payment category response"},"Problem":{"type":"object","properties":{"detail":{"type":"string","description":"Explanation specific to this occurrence of the problem"},"instance":{"type":"string","description":"A URI reference that identifies the specific occurrence of the problem","format":"uri"},"status":{"type":"integer","description":"HTTP status code of the problem","format":"int32"},"title":{"type":"string","description":"Short summary of the problem type"},"type":{"type":"string","description":"URI reference that identifies the problem type","format":"uri","default":"about:blank"}}},"ProblemDetailWithValidationErrors":{"type":"object","properties":{"detail":{"type":"string","description":"Explanation specific to this occurrence of the problem"},"instance":{"type":"string","description":"A URI reference that identifies the specific occurrence of the problem","format":"uri"},"status":{"type":"integer","description":"HTTP status code of the problem","format":"int32"},"title":{"type":"string","description":"Short summary of the problem type"},"type":{"type":"string","description":"URI reference that identifies the problem type","format":"uri","default":"about:blank"},"validationErrors":{"type":"array","description":"Semantic or constraint validation errors of the provided resources.","items":{"$ref":"#/components/schemas/ValidationError"}}}},"RelatedParty":{"type":"object","properties":{"accountNumber":{"type":"string","description":"account number"},"bic":{"type":"string","description":"bank identification code"},"name":{"type":"string","description":"creditor/debtor name"}},"description":"counterparty account data of credit transfer"},"RiskLevelDto":{"type":"object","properties":{"category":{"type":"string","description":"The category of the risk level","enum":["UNKNOWN","LOW","MEDIUM","HIGH"]},"id":{"type":"integer","description":"ID of the risk level","format":"int64"},"level":{"type":"integer","description":"The numerical risk level indicator","format":"int32"},"nameKey":{"type":"string","description":"Name translation key of the Risk level"}},"description":"KYC risk level DTO"},"Signature":{"type":"object","properties":{"signedBy":{"$ref":"#/components/schemas/SigningUser"},"signedOn":{"type":"string","format":"date-time"}},"description":"Signatures received for the transaction"},"SignatureSummary":{"type":"object","properties":{"numberOfSignaturesRequired":{"type":"integer","format":"int32"},"pendingSignatureFromAnyOf":{"uniqueItems":true,"type":"array","items":{"$ref":"#/components/schemas/SigningUser"}},"receivedSignatures":{"uniqueItems":true,"type":"array","items":{"$ref":"#/components/schemas/Signature"}},"signatureDeadline":{"type":"string","format":"date-time"}},"description":"Summary of transaction signatures"},"SigningUser":{"type":"object","properties":{"email":{"type":"string"},"firstName":{"type":"string"},"id":{"type":"integer","format":"int64"},"lastName":{"type":"string"}},"description":"Signatory user details"},"StatementAccount":{"type":"object","properties":{"accountNumber":{"type":"string","description":"Account number"},"bic":{"type":"string","description":"Account BIC"},"currency":{"type":"string","description":"Account currency"},"internalId":{"type":"integer","description":"Account internal ID","format":"int64"},"name":{"type":"string","description":"Account name"}},"description":"Statement account details"},"StatementBalance":{"type":"object","properties":{"amount":{"type":"number","description":"Statement balance amount"},"currency":{"type":"string","description":"Statement balance currency"},"dateTime":{"type":"string","description":"Statement balance date & time"},"isIntraday":{"type":"boolean","description":"Specifies if the balance is final (false) or intraday (true)"}},"description":"Statement balance"},"StatementTransactionEntry":{"type":"object","properties":{"amount":{"type":"number","description":"Amount of transferred funds"},"creditDebitIndicator":{"type":"string","description":"Direction of the transaction","enum":["DBIT","CRDT"]},"currency":{"type":"string","description":"Currency of the transaction"},"endToEndId":{"type":"string","description":"Transaction end-to-end ID"},"id":{"type":"integer","description":"Statement transaction id","format":"int64"},"informationToAccountOwner":{"type":"string","description":"Swift information to account owner"},"reference":{"type":"string","description":"Transaction reference"},"relatedParty":{"$ref":"#/components/schemas/RelatedParty"},"remittanceInformation":{"type":"string","description":"Transaction remittance information"},"transactionId":{"type":"integer","description":"Lynks transaction ID (available only for transactions originated from Lynks)","format":"int64"},"valueDate":{"type":"string","description":"The date of the transaction","format":"date"}},"description":"Statement transaction details"},"StatementTransactionSummary":{"type":"object","properties":{"creditTransactions":{"$ref":"#/components/schemas/TransactionSummary"},"debitTransactions":{"$ref":"#/components/schemas/TransactionSummary"},"totalTransactions":{"$ref":"#/components/schemas/TotalTransactionSummary"}},"description":"Statement transactions summary"},"TotalTransactionSummary":{"type":"object","properties":{"aggregatedSum":{"type":"number","description":"Aggregated sum of the transaction amounts"},"numberOfEntries":{"type":"integer","description":"Number of transactions","format":"int32"},"totalNetEntryAmount":{"type":"number"}},"description":"Summary of transactions"},"TransactionSummary":{"type":"object","properties":{"aggregatedSum":{"type":"number","description":"Aggregated sum of the transaction amounts"},"numberOfEntries":{"type":"integer","description":"Number of transactions","format":"int32"}},"description":"Transactions summary"},"ValidationError":{"type":"object","properties":{"errorMessage":{"type":"string","description":"Error message describing the problem with the provided resource."},"field":{"type":"string","description":"Field in error, if applicable."},"inputIndex":{"type":"integer","description":"Corresponding input index to which the error message applies, if applicable.","format":"int32"}},"description":"Semantic or constraint validation errors of the provided resources."},"creditor":{"type":"object","properties":{"accountNumber":{"type":"string","description":"Account number. Ignored if an ID is provided."},"id":{"type":"integer","description":"Account ID.","format":"int64"}},"description":"Creditor account info. Only one of ID or accountNumber is required."},"debtor":{"type":"object","properties":{"accountNumber":{"type":"string","description":"Account number. Ignored if an ID is provided."},"id":{"type":"integer","description":"Account ID.","format":"int64"}},"description":"Debtor account info. Only one of ID or accountNumber is required."}},"securitySchemes":{"oauth2":{"in":"header","name":"OAuth2","type":"apiKey"}}}}